#!/bin/bash
###########################################################
# macOS Development Environment Setup
#
# Copyright (c) Marcos Gomes-Borges
###########################################################
# This script installs to /usr/local
# To install elsewhere you can clone the project
#   git clone https://github.com/marcosgomesborges/dev-setup
###########################################################
VERSION='0.0.2'
MACOS_URL='https://raw.githubusercontent.com/marcosgomesborges/dev-setup/master/macos'

# macOS usage
###########################################################
usage() {
cat <<EOF
    Usage: macos [OPTIONS]

    Option          Long option         Meaning
    -h              --help              Show this help text and exit
    -v              --version           Show the version number of macos script
EOF
}

# macOS install usage
###########################################################
usage_install() {
cat <<EOF
    Usage: macos install [SCRIPT]

    Script          Description
    homebrew        Install homebrew package manager for macOS
EOF
}

# Print a formated message
# print_msg COLOR FRAME MSG
###########################################################
print_msg() {
    COLOR=$1
    FRAME=$2
    MSG=$3

    case "${COLOR}" in
        *"red"*)
            COLOR="\033[91m";;
        *"green"*)
            COLOR="\033[92m";;
        *"yellow"*)
            COLOR="\033[93m";;
        *"blue"*)
            COLOR="\033[94m";;
        *"magenta"*)
            COLOR="\033[95m";;
        *)
            COLOR="\033[39m";;
    esac

    case "${FRAME}" in
        true)
            echo -e "${COLOR}`printf "=%0.s" {0..79}`"
            echo -e "${COLOR}${MSG}"
            echo -e "${COLOR}`printf "=%0.s" {0..79}`"
            ;;
        false)
            echo -e "${COLOR}${MSG}"
            ;;
    esac

    echo -e "\033[39m" # default color
}

# Print the version number of macos script
###########################################################
print_version() {
  echo -e "macos ${VERSION}"
}

# Usage error
###########################################################
usage_fatal() { print_msg red false "${*}"; usage >&2; }
usage_install_fatal() { print_msg red false "${*}"; usage_install >&2; }

# Update macos script
###########################################################
macos_update() {
    echo -e "Updating macos ${VERSION}"
    curl -fsSL ${MACOS_URL} -o /usr/local/bin/macos && chmod +x /usr/local/bin/macos
}

# macos install homebrew
###########################################################
macos_install_homebrew() {
    print_msg yellow true "Starting Homebrew installation"

    # Installing GCC
    print_msg yellow false "Installing the GNU Compiler Collection (GCC)"

    # Install the Command Line Tools package
    xcode-select --install

    # Install the additional SDK headers
    sudo installer -pkg /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg -target /

    # Installing Homebrew
    print_msg yellow false "Installing Homebrew"

    if hash brew 2>/dev/null; then
        print_msg green "Brew is already installed - updating ..."
        brew update
        brew upgrade
    else
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    fi

    print_msg green true "Homebrew installation was successful"
}

# macos install
###########################################################
macos_install() {
    case ${@} in
        'homebrew')
            macos_install_homebrew
            exit 0
            ;;
        ""|*)
            usage_install_fatal "invalid installation command"
            exit 1
            ;;
    esac
}

# Parse options
###########################################################
while [ "${#}" -gt 0 ]; do
    case ${1} in
        --*'='*)
            shift
            set -- "${1%%=*}" "${1#*=}" "$@"
            continue
            ;;
        -h|--help)
            usage
            exit 0
            ;;
        -v|--version)
            print_version
            exit 0
            ;;
        -i|--install)
            shift
            macos_install ${1}
            exit 0
            ;;
        -u|--update)
            macos_update
            exit 0
            ;;
        --|-*|*)
            usage_fatal "unknown option: ${1}"
            exit 1
            ;;
    esac
    shift
done
